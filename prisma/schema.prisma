// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Loan {
  id              Int              @id @default(autoincrement())
  borrowerName    String           @db.VarChar(255)
  pipelineStage   PipelineStage    @default(PROSPECT)
  loanAmount      Int?
  transactionType TransactionType?
  referralSource  String?          @db.VarChar(255)
  borrowerEmail   String?          @db.VarChar(255)
  propertyAddress String?          @db.VarChar(255)
  borrowerPhone   String?          @db.VarChar(50)
  purchasePrice   Int?
  creditScore     Int?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  activityLog     ActivityLog[]
  fileNotes       FileNotes[]
}

enum TransactionType {
  PURCHASE
  REFINANCE
}

enum PipelineStage {
  PROSPECT
  APPLICATION
  PROCESSING
  UNDERWRITING
  CONDITIONAL
  CLOSED
}

model ActivityLog {
  id        Int      @id @default(autoincrement())
  loanId    Int
  loan      Loan     @relation(fields: [loanId], references: [id])
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// The @relation directive in the ActivityLog model establishes the relationship between the two models. The fields: [loanId] part indicates that the loanId field in the ActivityLog model is used to connect it to the Loan model. The references: [id] part indicates that the loanId field in the ActivityLog model corresponds to the id field in the Loan model.

model FileNotes {
  id        Int      @id @default(autoincrement())
  loanId    Int
  loan      Loan     @relation(fields: [loanId], references: [id])
  note      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
